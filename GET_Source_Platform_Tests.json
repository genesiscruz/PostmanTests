// Load Postman BDD && Global DataTown functions
eval(postman.getGlobalVariable('postmanBDD'));
eval(postman.getGlobalVariable('DataTownFunctions'));

// Parse Response Body
const sourcePlatformData = JSON.parse(responseBody);

describe('SourcePlatforms - GET Source Platforms', function() {
  
  it('should return a 200 OK status code', function() {
    response.should.have.status(200);
  });
  
  it('should return json and not be empty', function() {
    response.should.be.json;
    response.body.should.not.be.empty;
  });
   it('should return a data ogject with all source platforms', function() {
      expect(sourcePlatformData).to.have.property('data').that.is.an('object');
  });
  
  it('should return valid source platform objects in the oject', function()
  {
          expect(sourcePlatformData.data).to.have.all.keys('id','name','logo','options');
          expect(sourcePlatformData.data).to.have.property('id').that.is.a('number');
          expect(sourcePlatformData.data).to.have.property('name').that.is.a('string');
          expect(sourcePlatformData.data).to.have.property('logo').that.is.a('string');
          expect(sourcePlatformData.data).to.have.property('options').that.is.an('array');
          
      


  });

   });